<cffunction name="sameTransfer" access="public" returntype="boolean" default="boolean" hint="Checks to see if 2 transfer objects are the same" output="false">
<cfargument name="transfer" type="transfer.com.TransferObject" required="Yes" hint="The transfer object to check if we are equal">
<cfscript>
return getTransferObject().sameTransfer(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="setuserId" access="public" returntype="void" default="void" hint="Mutator for property userId" output="false">
<cfargument name="userId" type="numeric" required="true" hint="The value to set userId to">
<cfscript>
getTransferObject().setuserId(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="actionAfterUpdateTransferEvent" access="public" returntype="void" default="void" hint="Observer method action for when updates occur" output="false">
<cfargument name="event" type="transfer.com.events.TransferEvent" required="true" hint="The Transfer Event Object">
<cfscript>
getTransferObject().actionAfterUpdateTransferEvent(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getlastName" access="public" returntype="string" default="string" hint="Accessor for property lastName" output="false">
<cfscript>
return getTransferObject().getlastName(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getuserId" access="public" returntype="numeric" default="numeric" hint="Accessor for property userId" output="false">
<cfscript>
return getTransferObject().getuserId(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getUserType" access="public" returntype="transfer.com.TransferObject" default="transfer.com.TransferObject" hint="Accessor for UserType, user.UserType" output="false">
<cfscript>
return getTransferObject().getUserType(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="init" access="public" returntype="transfer.com.TransferObject" default="transfer.com.TransferObject" hint="Constructor for Transfer class user.User" output="false">
<cfargument name="transfer" type="transfer.com.Transfer" required="true" hint="The Transfer library">
<cfargument name="utility" type="transfer.com.util.Utility" required="true" hint="The Utility object">
<cfargument name="nullable" type="transfer.com.sql.Nullable" required="true" hint="The Nullable lookup object">
<cfargument name="thisObject" type="transfer.com.TransferObject" required="true" hint="What is determined to be the base 'this' object for this TransferObject">
<cfscript>
return getTransferObject().init(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getisActive" access="public" returntype="boolean" default="boolean" hint="Accessor for property isActive" output="false">
<cfscript>
return getTransferObject().getisActive(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getUserTypeMemento" access="public" returntype="struct" default="struct" hint="returns the memento for manytoone UserType" output="false">
<cfscript>
return getTransferObject().getUserTypeMemento(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getIsDirty" access="public" returntype="boolean" default="boolean" hint="If this object's data is differnt from that stored in the DB." output="false">
<cfscript>
return getTransferObject().getIsDirty(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getcreatedOn" access="public" returntype="date" default="date" hint="Accessor for property createdOn" output="false">
<cfscript>
return getTransferObject().getcreatedOn(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="hasUserType" access="public" returntype="boolean" default="boolean" hint="Whether or not this object contains a user.UserType" output="false">
<cfscript>
return getTransferObject().hasUserType(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getpassword" access="public" returntype="string" default="string" hint="Accessor for property password" output="false">
<cfscript>
return getTransferObject().getpassword(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="clone" access="public" returntype="transfer.com.TransferObject" default="transfer.com.TransferObject" hint="Get a deep clone of this object" output="false">
<cfscript>
return getTransferObject().clone(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getIsLoaded" access="public" returntype="boolean" default="boolean" hint="easy way to determine if the data is loaded, since this is a TransferObject, it must be loaded, and therefore returns true." output="false">
<cfscript>
return getTransferObject().getIsLoaded(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getemail" access="public" returntype="string" default="string" hint="Accessor for property email" output="false">
<cfscript>
return getTransferObject().getemail(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getIsProxy" access="public" returntype="boolean" default="boolean" hint="returns whether or not this is a proxy object. Since this is a TrasferObject, it returns false." output="false">
<cfscript>
return getTransferObject().getIsProxy(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="setPropertyMemento" access="public" returntype="void" default="void" hint="set the Property state of this object with a memento" output="false">
<cfargument name="memento" type="struct" required="true" hint="the memento to set the state with">
<cfscript>
getTransferObject().setPropertyMemento(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getUserTypeisLoaded" access="public" returntype="boolean" default="boolean" hint="Whether or not the composition 'UserType' has been loaded yet" output="false">
<cfscript>
return getTransferObject().getUserTypeisLoaded(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="setcreatedOn" access="public" returntype="void" default="void" hint="Mutator for property createdOn" output="false">
<cfargument name="createdOn" type="date" required="true" hint="The value to set createdOn to">
<cfscript>
getTransferObject().setcreatedOn(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getClassName" access="public" returntype="string" default="string" hint="The class name of the TransferObject" output="false">
<cfscript>
return getTransferObject().getClassName(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="equalsTransfer" access="public" returntype="boolean" default="boolean" hint="If an object is persisted, returns true if they are of the same class and same id. If not, returns true if they are the same object." output="false">
<cfargument name="transfer" type="transfer.com.TransferObject" required="true" hint="The TransferObject to test against">
<cfscript>
return getTransferObject().equalsTransfer(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="setMemento" access="public" returntype="void" default="void" hint="set the state of this object from a memento" output="false">
<cfargument name="memento" type="struct" required="true" hint="the memento to set the state with">
<cfscript>
getTransferObject().setMemento(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getIsClone" access="public" returntype="boolean" default="boolean" hint="If this object is a clone or not" output="false">
<cfscript>
return getTransferObject().getIsClone(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getfirstName" access="public" returntype="string" default="string" hint="Accessor for property firstName" output="false">
<cfscript>
return getTransferObject().getfirstName(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="setUserTypeMemento" access="public" returntype="void" default="void" hint="set the state of composition manytoone 'UserType'" output="false">
<cfargument name="memento" type="struct" required="true" hint="the memento to set the state with">
<cfscript>
getTransferObject().setUserTypeMemento(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getIsPersisted" access="public" returntype="boolean" default="boolean" hint="If this object is stored in the database" output="false">
<cfscript>
return getTransferObject().getIsPersisted(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getOriginalTransferObject" access="public" returntype="transfer.com.TransferObject" default="transfer.com.TransferObject" hint="Returns this object" output="false">
<cfscript>
return getTransferObject().getOriginalTransferObject(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="actionAfterCreateTransferEvent" access="public" returntype="void" default="void" hint="Observer action method for when creates occur" output="false">
<cfargument name="event" type="transfer.com.events.TransferEvent" required="true" hint="The Transfer Event Object">
<cfscript>
getTransferObject().actionAfterCreateTransferEvent(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getupdatedOn" access="public" returntype="date" default="date" hint="Accessor for property updatedOn" output="false">
<cfscript>
return getTransferObject().getupdatedOn(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="copyValuesTo" access="public" returntype="void" default="void" hint="Copies the values of this object to one of the same class" output="false">
<cfargument name="transfer" type="transfer.com.TransferObject" required="true" hint="The object to copy values to">
<cfscript>
getTransferObject().copyValuesTo(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getPropertyMemento" access="public" returntype="struct" default="struct" hint="returns the memento for properties" output="false">
<cfscript>
return getTransferObject().getPropertyMemento(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="setupdatedOn" access="public" returntype="void" default="void" hint="Mutator for property updatedOn" output="false">
<cfargument name="updatedOn" type="date" required="true" hint="The value to set updatedOn to">
<cfscript>
getTransferObject().setupdatedOn(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getLoadedObject" access="public" returntype="transfer.com.TransferObject" default="transfer.com.TransferObject" hint="Returns itself, as there is no object to load" output="false">
<cfscript>
return getTransferObject().getLoadedObject(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="removeUserType" access="public" returntype="void" default="void" hint="remove the instance of user.UserType" output="false">
<cfscript>
getTransferObject().removeUserType(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="actionAfterDeleteTransferEvent" access="public" returntype="void" default="void" hint="Observer action method for when deletes occur" output="false">
<cfargument name="event" type="transfer.com.events.TransferEvent" required="true" hint="The Transfer Event Object">
<cfscript>
getTransferObject().actionAfterDeleteTransferEvent(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="actionAfterDiscardTransferEvent" access="public" returntype="void" default="void" hint="Observer action method for when discards occur" output="false">
<cfargument name="event" type="transfer.com.events.TransferEvent" required="true" hint="The Transfer Event Object">
<cfscript>
getTransferObject().actionAfterDiscardTransferEvent(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="setfirstName" access="public" returntype="void" default="void" hint="Mutator for property firstName" output="false">
<cfargument name="firstName" type="string" required="true" hint="The value to set firstName to">
<cfscript>
getTransferObject().setfirstName(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="setisActive" access="public" returntype="void" default="void" hint="Mutator for property isActive" output="false">
<cfargument name="isActive" type="boolean" required="true" hint="The value to set isActive to">
<cfscript>
getTransferObject().setisActive(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getMemento" access="public" returntype="struct" default="struct" hint="Returns the memento for all non-lazy members of this object" output="false">
<cfscript>
return getTransferObject().getMemento(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="setlastName" access="public" returntype="void" default="void" hint="Mutator for property lastName" output="false">
<cfargument name="lastName" type="string" required="true" hint="The value to set lastName to">
<cfscript>
getTransferObject().setlastName(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="setpassword" access="public" returntype="void" default="void" hint="Mutator for property password" output="false">
<cfargument name="password" type="string" required="true" hint="The value to set password to">
<cfscript>
getTransferObject().setpassword(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="setUserType" access="public" returntype="void" default="void" hint="Mutator for UserType, user.UserType" output="false">
<cfargument name="transfer" type="transfer.com.TransferObject" required="true" hint="The user.UserType to set">
<cfscript>
getTransferObject().setUserType(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="setemail" access="public" returntype="void" default="void" hint="Mutator for property email" output="false">
<cfargument name="email" type="string" required="true" hint="The value to set email to">
<cfscript>
getTransferObject().setemail(argumentCollection=arguments);</cfscript>
</cffunction>


