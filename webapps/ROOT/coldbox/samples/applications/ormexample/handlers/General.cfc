component output="false" {	property name="restrictions"  inject="model:Restrictions";	property name="authorService" inject="entityService:Author";		public void function index(event) output="false" {		var rc = event.getCollection();		var prc = event.getCollection(private=true);				prc.selectedNav = "general.index";				event.setView("home");	}		public void function basic(event) output="false" {		var rc = event.getCollection();		var prc = event.getCollection(private=true);				prc.selectedNav = "general.basic";				var criteria = ArrayNew(1);		ArrayAppend(criteria, Restrictions.eq("firstName","Michael"));		prc.example1 = authorService.criteriaQuery(criteria);				var criteria = ArrayNew(1);		ArrayAppend(criteria, Restrictions.ne("firstName","Michael"));		prc.example2 = authorService.criteriaQuery(criteria);			var criteria = ArrayNew(1);		ArrayAppend(criteria, Restrictions.in("firstName",["Ian","Emily","Paul"]));		prc.example3a = authorService.criteriaQuery(criteria);				var criteria = ArrayNew(1);		ArrayAppend(criteria, Restrictions.in("id",JavaCast("java.lang.Integer[]",[2,5,9])));		prc.example3b = authorService.criteriaQuery(criteria);				var criteria = ArrayNew(1);		ArrayAppend(criteria, Restrictions.like("lastName","M%"));		prc.example4 = authorService.criteriaQuery(criteria);				var criteria = ArrayNew(1);		ArrayAppend(criteria, Restrictions.ilike("lastName","s%"));		prc.example5 = authorService.criteriaQuery(criteria);				var criteria = ArrayNew(1);		ArrayAppend(criteria, Restrictions.isEmpty("books"));		prc.example6 = authorService.criteriaQuery(criteria);				var criteria = ArrayNew(1);		ArrayAppend(criteria, Restrictions.isNotEmpty("books"));		prc.example7 = authorService.criteriaQuery(criteria);				var criteria = ArrayNew(1);		ArrayAppend(criteria, Restrictions.isNull("bio"));		prc.example8 = authorService.criteriaQuery(criteria);				var criteria = ArrayNew(1);		ArrayAppend(criteria, Restrictions.isNotNull("bio"));		prc.example9 = authorService.criteriaQuery(criteria);				var criteria = ArrayNew(1);		ArrayAppend(criteria, Restrictions.between("lastName","A","M"));		prc.example10a = authorService.criteriaQuery(criteria);				var criteria = ArrayNew(1);		ArrayAppend(criteria, Restrictions.between("id",JavaCast("int",3),JavaCast("int",7)));		prc.example10b = authorService.criteriaQuery(criteria);				var criteria = ArrayNew(1); 		ArrayAppend(criteria, Restrictions.gt("id",JavaCast("int",8))); 		prc.example11 = authorService.criteriaQuery(criteria);				var criteria = ArrayNew(1); 		ArrayAppend(criteria, Restrictions.ge("id",JavaCast("int",13))); 		prc.example12 = authorService.criteriaQuery(criteria);				event.setView("basic");	}		public void function advanced(event) output="false" {		var rc = event.getCollection();		var prc = event.getCollection(private=true);				prc.selectedNav = "general.advanced";				var criteria = ArrayNew(1); 		ArrayAppend(criteria, Restrictions.eq("firstName","Emily"));		ArrayAppend(criteria, Restrictions.eq("firstName","Paul"));		ArrayAppend(criteria, Restrictions.eq("firstName","Amy")); 		prc.example1 = authorService.criteriaQuery([Restrictions.disjunction(criteria)]);				var disjunction = ArrayNew(1); 		ArrayAppend(disjunction, Restrictions.eq("firstName","Emily"));		ArrayAppend(disjunction, Restrictions.eq("firstName","Paul"));		ArrayAppend(disjunction, Restrictions.eq("firstName","Amy"));				var criteria = ArrayNew(1);		ArrayAppend(criteria, Restrictions.gt("id",JavaCast("int",7)));		ArrayAppend(criteria, Restrictions.disjunction(disjunction)); 		prc.example2 = authorService.criteriaQuery(criteria);				event.setView("advanced");	}		public void function paging(event) output="false" {		var rc = event.getCollection();		var prc = event.getCollection(private=true);		prc.selectedNav = "general.paging";				event.paramValue("page",1);		prc.boundaries = getMyPlugin("Paging").getBoundaries();				var criteria = ArrayNew(1);		ArrayAppend(criteria, Restrictions.ge("firstName","M"));				prc.example1 = authorService.criteriaQuery(criteria=criteria, offset=(prc.boundaries.STARTROW-1), max=getSetting("PagingMaxRows"), sortOrder="firstName ASC");		prc.foundcount = authorService.criteriaCount(criteria=criteria);				event.setView("paging");	}	}