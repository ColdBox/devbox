<!----------------------------------------------Component Name : password_generatorAuthor :		Luis MajanoDescription : 							Creates a string of random characters, amount defined by				variable 'Length', with selectable character classes and				excluded characters.------------------------------------------------><cfcomponent displayname="Password Generator" hint="This is a random password generator with multiple features depending on incoming arguments."><!--- ************************************************************* ---><!--- Constructor ---><!--- ************************************************************* ---><!--- Set the ascii lists for upper, lower case Alphabet, Numeric, and Simbolic ---><cfset this.local_Upper = "65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90"><cfset this.local_Lower = "97.98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122"><cfset this.local_Numeric   = "48,49,50,51,52,53,54,55,56,57"><cfset this.local_Symbols   = "33,34,36,37,38,39,40,41,43,44,45,46,47,58,59,61,63,64,91,92,93,95,96,123,124,125,126"><!--- set the local ascii list ----><cfset this.local_asciilist = ""><!--- set the local fresh_password to return ---><cfset this.fresh_password  = ""><!--- ************************************************************* --->	<!--- ************************************************************* ---><cffunction name="get_password"			returntype="string"		    output="false"			 				displayname="Get Password" 		    hint="Retrieve a random password, based on passed arguments.">		<cfargument name="Length"			    required="false"			    type="numeric"			    default="8"			    displayname="Length" hint="The length of the random password. Default length is 8">	<cfargument name="Upper"			    required="false"				type="boolean"				default="TRUE"				displayname="Upper Case" hint="Boolean value to display Upper Case letters. Default is TRUE">	<cfargument name="Lower"			    required="false"				type="boolean"				default="TRUE"				displayname="Lower Case" hint="Boolean value to display Lower Case letters. Default is TRUE"> 	<cfargument name="Numeric"	            required="false"				type="boolean"				default="TRUE"				displayname="Numeric Characters" hint="Boolean value to display numerical characters 0-9. Default is TRUE">	<cfargument name="Symbols"	    	    required="false"				type="boolean"				default="FALSE"				displayname="Symbolic Characters" hint="Boolean value to display symbolic characters. Default is FALSE">	<cfargument name="Exclude"	 		    required="false"				type="string"				default=""				displayname="Exclusion List" hint="String list for excluding characters such as 'a,B,$'">		<!--- check which characters were chosen, and create a local ascii list --->	<cfif arguments.Upper>		<cfset this.local_asciilist = ListAppend(this.local_asciilist, this.local_upper & ",")>	</cfif>			  	<cfif arguments.Lower>		<cfset this.local_asciilist = ListAppend(this.local_asciilist, this.local_lower & ",")>	</cfif>	<cfif arguments.Numeric>		<cfset this.local_asciilist = ListAppend(this.local_asciilist, this.local_numeric & ",")>	</cfif>	<cfif arguments.Symbols>		<cfset this.local_asciilist = ListAppend(this.local_asciilist, this.local_symbols)>	</cfif>					<!--- Remove characters in the exclusion list --->	<cfif listLen(arguments.exclude) gt 0>		<cfloop index="i" list="#arguments.exclude#">			<cfif ListFind(this.local_asciilist, Asc(i) ) NEQ "0">				<cfset local_tempListID = ListFind(this.local_asciilist, Asc(i))>				<cfset this.local_asciilist = ListDeleteAt(this.local_asciilist, local_tempListID)>			</cfif>		</cfloop>	</cfif>				<!--- get lenght --->	<cfset list_lengths = ListLen(this.local_asciilist)>	<!--- loop arguments.length X's in order to retrieve random password --->	<cfloop from="1" to="#arguments.length#" step="1" index="i">		<!--- get random number from list --->		<cfset local_tempRand = RandRange(1, list_lengths)>		<!--- get the random character in list --->		<cfset local_tempChar = ListGetAt(this.local_asciilist, local_tempRand)>		<!--- set the return variable --->		<cfset this.fresh_password = this.fresh_password & "#chr(local_tempChar)#">	</cfloop>		<cfreturn this.fresh_password></cffunction><!--- ************************************************************* ---></cfcomponent> 